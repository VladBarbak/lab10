"""
Реалізувати програмно мовою Python завдання з наведеного нижче списку. Длякожної з задач алгоритм реалізувати з
використанням рекурсії і ітерації. Аргументувати письмово доцільність вибору в кожному випадку рекурсії або ітерації
(використовувати в якості критеріїв - час розробки та виконання програм, обсяг займаної пам'яті, читабельність програми)
1. Сформувати функцію, що буде обчислювати факторіал заданого користувачем натурального числа n.
Барбак Владислав 122-В
"""
while True:
    from time import time  # Імпорутуємо time для підрахунку часу
    def fact_rec(n):  # Створення рекурсивної функції
        if n == 0:
            return 1
        return n * fact_rec(n - 1)
    def fact_iter(n):  # Створення ітераційної функції
        a = 1
        for i in range(1, n + 1):
            a *= i
        return a
    n = int((input("N = ")))
    t_1 = time()
    print("Виконання рекурсією: \n", fact_rec(n))
    ti_1 = time()
    rec_time = ti_1 - t_1
    t_2 = time()
    print("Виконання ітерацією: \n", fact_iter(n))
    ti_2 = time()
    iter_time = ti_2 - t_2
    print()
    print(f"Час виконання:\n Ітерація = {iter_time}\n Рекурсія = {rec_time}")
    result = input("Хочите продовжити? Якщо да - 1, Якщо ні - інше: ")  # Зациклюємо програму
    if result == '1':
        continue
    else:
        break
# Обидва методи зваймають майже однаково коду.
# Ітерація виконується швидше.
# Рекурсія забирає більше пам'яті через зберігання значень у стеку.
# Рекурсивний метод більш зрозуміліший для читання.
